---
- name: Install Node and Nginx exporters on web servers
  hosts: webservers
  become: yes
  vars:
    nginx_status_url: "http://localhost/nginx_status"
    
  tasks:
    - name: Include Nginx setup
      include_tasks: nginx.yml
      
- name: Install Prometheus and exporters
  hosts: prometheus
  become: yes

  tasks:
    - name: Include Docker setup
      include_tasks: common_docker.yml
      when: "'docker_hosts' in group_names"

    - name: Create Prometheus config directory
      file:
        path: /etc/prometheus
        state: directory
        mode: '0755'

    - name: Configure Prometheus
      copy:
        content: |
          global:
            scrape_interval: 15s
            
          scrape_configs:
            - job_name: 'node'
              static_configs:
                - targets: ['10.0.1.13:9100', '10.0.2.32:9100']
            
            - job_name: 'nginx'
              static_configs:
                - targets: ['10.0.1.13:4040', '10.0.2.32:4040']
        dest: /etc/prometheus/prometheus.yml

    - name: Run Prometheus container
      docker_container:
        name: prometheus
        image: prom/prometheus:latest
        ports:
          - "9090:9090"
        volumes:
          - "/etc/prometheus/prometheus.yml:/etc/prometheus/prometheus.yml"
        restart_policy: always

- name: Install Node and Nginx exporters on web servers
  hosts: webservers
  become: yes

  tasks:
    # Установка Node Exporter
    - name: Download Node Exporter
      get_url:
        url: "https://github.com/prometheus/node_exporter/releases/download/v1.6.1/node_exporter-1.6.1.linux-amd64.tar.gz"
        dest: "/tmp/node_exporter.tar.gz"
      register: node_exporter_download
      until: node_exporter_download is succeeded
      retries: 3
      delay: 10

    - name: Extract Node Exporter
      unarchive:
        src: "/tmp/node_exporter.tar.gz"
        dest: "/tmp/"
        remote_src: yes

    - name: Install Node Exporter binary
      copy:
        src: "/tmp/node_exporter-1.6.1.linux-amd64/node_exporter"
        dest: "/usr/local/bin/node_exporter"
        mode: '0755'
        remote_src: yes

    - name: Create systemd service for Node Exporter
      copy:
        content: |
          [Unit]
          Description=Node Exporter
          After=network.target

          [Service]
          User=root
          ExecStart=/usr/local/bin/node_exporter
          Restart=always

          [Install]
          WantedBy=multi-user.target
        dest: "/etc/systemd/system/node-exporter.service"

    - name: Enable and start Node Exporter
      systemd:
        name: node-exporter
        state: started
        enabled: yes
        daemon_reload: yes

    # Установка Nginx Log Exporter через Docker Hub
    - name: Ensure Docker is installed
      include_tasks: common_docker.yml

    - name: Create Nginx Log Exporter config directory
      file:
        path: /etc/nginx-log-exporter
        state: directory
        mode: '0755'

    - name: Configure Nginx Log Exporter
      copy:
        content: |
          listen:
            port: 4040
            address: "0.0.0.0"
          
          namespace: "nginx"
          
          log_format:
            name: main
            format: '$remote_addr - $remote_user [$time_local] "$request" $status $body_bytes_sent "$http_referer" "$http_user_agent" "$http_x_forwarded_for"'
            
          metrics:
            - name: "http_response_count_total"
              description: "total number of HTTP responses"
              type: "counter"
              match:
                status: "^[2-5]\\d\\d$"
                
            - name: "http_response_size_bytes"
              description: "total size of HTTP responses in bytes"
              type: "counter"
              match:
                status: "^[2-5]\\d\\d$"
                capture:
                  - variable: "$body_bytes_sent"
                    type: "integer"
        dest: "/etc/nginx-log-exporter/config.yml"

    - name: Run Nginx Log Exporter container (from Docker Hub)
      docker_container:
        name: nginx-log-exporter
        image: "nginx/nginx-prometheus-exporter:0.11.0"
        ports:
          - "4040:4040"
        volumes:
          - "/etc/nginx-log-exporter/config.yml:/etc/nginx-exporter/config.yml"
          - "/var/log/nginx:/var/log/nginx:ro"
        command: "-nginx.scrape-uri http://localhost/nginx_status"
        restart_policy: always

    # Альтернативный вариант установки бинарного экспортера
    - name: Install Nginx Log Exporter binary (alternative)
      block:
        - name: Download Nginx Log Exporter binary
          get_url:
            url: "https://github.com/nginxinc/nginx-prometheus-exporter/releases/download/v0.11.0/nginx-prometheus-exporter_0.11.0_linux_amd64.tar.gz"
            dest: "/tmp/nginx-exporter.tar.gz"
            mode: '0755'
          
        - name: Extract Nginx Exporter
          unarchive:
            src: "/tmp/nginx-exporter.tar.gz"
            dest: "/usr/local/bin/"
            remote_src: yes
            extra_opts: ["--strip-components=1"]
          
        - name: Create systemd service for Nginx Exporter
          copy:
            content: |
              [Unit]
              Description=NGINX Prometheus Exporter
              After=network.target

              [Service]
              Type=simple
              User=root
              ExecStart=/usr/local/bin/nginx-prometheus-exporter -nginx.scrape-uri http://localhost/nginx_status
              Restart=always

              [Install]
              WantedBy=multi-user.target
            dest: "/etc/systemd/system/nginx-exporter.service"
          
        - name: Enable and start Nginx Exporter
          systemd:
            name: nginx-exporter
            state: started
            enabled: yes
            daemon_reload: yes
      when: false  # Измените на true, если нужно использовать бинарную установку вместо Docker

    # Очистка временных файлов
    - name: Clean up temporary files
      file:
        path: "{{ item }}"
        state: absent
      with_items:
        - "/tmp/node_exporter.tar.gz"
        - "/tmp/node_exporter-1.6.1.linux-amd64"
        - "/tmp/nginx-exporter.tar.gz"